## This script is generated by ChatGPT given the Amazon Statefunction Language (ASL) taken from the following youtube tutorial.

## https://www.youtube.com/watch?v=DFSko_sLyMM&list=PL9nWRykSBSFgQrO66TmO1vHFP6yuPF5G-&index=12

import boto3
import json

# Initialize boto3 clients for Step Functions and DynamoDB
sfn_client = boto3.client('stepfunctions', region_name='us-east-1')
dynamodb_client = boto3.client('dynamodb', region_name='us-east-1')

# Create the DynamoDB table
table_name = 'CustomerOrdersTable'
try:
    dynamodb_client.create_table(
        TableName=table_name,
        KeySchema=[
            {
                'AttributeName': 'customerId',
                'KeyType': 'HASH'
            },
            {
                'AttributeName': 'orderId',
                'KeyType': 'RANGE'
            }
        ],
        AttributeDefinitions=[
            {
                'AttributeName': 'customerId',
                'AttributeType': 'S'
            },
            {
                'AttributeName': 'orderId',
                'AttributeType': 'S'
            }
        ],
        ProvisionedThroughput={
            'ReadCapacityUnits': 5,
            'WriteCapacityUnits': 5
        }
    )
    print(f"Creating DynamoDB table {table_name}...")
except dynamodb_client.exceptions.ResourceInUseException:
    print(f"DynamoDB table {table_name} already exists.")

# Define the state machine definition
state_machine_definition = {
    "Comment": "A description of my state machine",
    "StartAt": "Add Order Entry",
    "States": {
        "Add Order Entry": {
            "Type": "Pass",
            "Result": "Order Entry Added",
            "Next": "Choice"
        },
        "Choice": {
            "Type": "Pass",
            "Result": "Choice State",
            "Next": "Call Credit Card Service To Charge Customer"
        },
        "Call Credit Card Service To Charge Customer": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:us-east-1:755314965794:function:Test:$LATEST"
            },
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 6,
                    "BackoffRate": 2
                }
            ],
            "Next": "Success",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "Fallback - Delete failed order",
                    "ResultPath": "$.result"
                }
            ],
            "ResultPath": "$.result"
        },
        "Fallback - Delete failed order": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:deleteItem",
            "Parameters": {
                "TableName": "CustomerOrdersTable",
                "Key": {
                    "customerId": {
                        "S.$": "$.customerId"
                    },
                    "orderId": {
                        "S.$": "$.orderId"
                    }
                }
            },
            "Next": "Fail"
        },
        "Success": {
            "Type": "Succeed"
        },
        "Fail": {
            "Type": "Fail"
        }
    }
}

# Create the Step Function state machine
state_machine_name = 'MyStateMachine'
role_arn = 'arn:aws:iam::your-account-id:role/your-iam-role'  # Replace with your IAM role ARN

try:
    response = sfn_client.create_state_machine(
        name=state_machine_name,
        definition=json.dumps(state_machine_definition),
        roleArn=role_arn
    )
    print(f"Created Step Function with ARN: {response['stateMachineArn']}")
except sfn_client.exceptions.StateMachineAlreadyExists:
    print(f"Step Function {state_machine_name} already exists.")

# Replace 'your-account-id' and 'your-iam-role' with appropriate values
